name: Continuous Integration

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  unit-test:
    name: Static checks and tests
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.4]
        java: ['adopt:11']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: ${{ matrix.java }}

      - uses: coursier/cache-action@v5

      - name: Checks
        run: sbtn ++${{ matrix.scala }}! 'scalafmtSbtCheck; scalafmtCheckAll; compile; doc; docs/mdoc; scalafix --check'

      - name: Create tmp directory
        run: mkdir tmp

      - name: Test
        run: sbtn ++${{ matrix.scala }}! 'coverage; testOnly * -- -l blobstore.IntegrationTest; coverageAggregate'

      - name: Upload code coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          flags: unit-scala-${{ matrix.scala }}

  all-test:
    name: Static checks and tests
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.4]
        java: ['adopt:11']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: ${{ matrix.java }}

      - uses: coursier/cache-action@v5

      - name: Checks
        run: sbtn ++${{ matrix.scala }}! 'scalafmtSbtCheck; scalafmtCheckAll; compile; doc; docs/mdoc; scalafix --check'

      - name: Create tmp directory
        run: mkdir tmp

      - name: Decrypt Box App Key
        run: openssl aes-256-cbc -K ${{ secrets.OPENSSL_KEY }} -iv ${{ secrets.OPENSSL_IV }} -in box/src/test/resources/box_appkey.json.enc -out box/src/test/resources/box_appkey.json -d

      - name: Test
        run: sbtn ++${{ matrix.scala }}! 'coverage; test; coverageAggregate'

      - name: Upload code coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          flags: all-scala-${{ matrix.scala }}

  publish:
    name: Publish artifacts
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12, 2.13.4]
        java: ['adopt:11']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: ${{ matrix.java }}

      - uses: coursier/cache-action@v5

      - uses: olafurpg/setup-gpg@v3

      - name: CI Release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: sbtn ++${{ matrix.scala }}! ci-release