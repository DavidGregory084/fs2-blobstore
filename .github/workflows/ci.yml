name: CI

on:
  pull_request:
    branches: ['*']
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  scalafmt:
    name: Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: AvaPL/scalafmt-native-formatter@v0.1.2

  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [scalafmt]
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2.3.4

      - name: Cache project dependencies between workflow runs
        uses: coursier/cache-action@v6

      - name: Enable coverage instrumentation
        run: sbt + coverage

      - name: Compile all sources
        run: sbt +'all compile Test/compile IntegrationTest/compile doc'

      - name: Compile readme
        run: sbt +'docs/mdoc'

      - name: Run Scalafix
        run: sbt +'scalafixAll --check'

      - name: Create tmp directory
        run: mkdir tmp

      - name: Install azurite
        run: sudo npm install -g azurite

      - name: Start azurite
        run: azurite-blob -d azurite-debug.log &

      - name: Test
        run: sbt +test
        env:
          AZURITE_PORT: 10000

      - name: Echo azurite logs
        if: failure()
        run: cat azurite-debug.log

      - name: Publish JUnit test report
        if: always()
        uses: mikepenz/action-junit-report@v2.4.1
        with:
          github_token: ${{ github.token }}
          report_paths: '**/target/test-reports/*.xml'

      - name: Generate coverage report
        run: sbt +coverageReport

      - name: Upload code coverage to codecov
        uses: codecov/codecov-action@v1.5.0
        with:
          flags: scala

  integration-tests:
    name: Integration tests
    if: github.actor != 'dependabot[bot]' && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository))
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [scalafmt, tests]
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2.3.4

      - name: Cache project dependencies between workflow runs
        uses: coursier/cache-action@v6

      - name: Enable coverage instrumentation
        run: sbt coverage

      - name: Compile all sources
        run: sbt IntegrationTest/compile

      - name: Create tmp directory
        run: mkdir tmp

      - name: Decrypt Box App Key
        run: openssl aes-256-cbc -K ${{ secrets.OPENSSL_KEY }} -iv ${{ secrets.OPENSSL_IV }} -in box/src/it/resources/box_appkey.json.enc -out box/src/it/resources/box_appkey.json -d

      - name: Test
        run: sbt IntegrationTest/test

      - name: Publish JUnit test report
        if: always() # publish report when tests fail
        uses: mikepenz/action-junit-report@v2.4.1
        with:
          github_token: ${{ github.token }}
          report_paths: '**/target/it-reports/*.xml'

      - name: Generate coverage report
        run: sbt coverageReport

      - name: Upload code coverage to codecov
        uses: codecov/codecov-action@v1.5.0
        with:
          flags: scala-it
